4:I[39275,[],""]
5:I[61343,[],""]
0:["g6oKHyFxGP76cngCE6NpZ",[[["",{"children":["articles",{"children":[["slug","parallel-loading-react","d"],{"children":["__PAGE__?{\"slug\":\"parallel-loading-react\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["articles",{"children":[["slug","parallel-loading-react","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$L3",null],null]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","articles","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","className":"bg-stone-900 dark:bg-white __className_36bd41","children":[["$","head",null,{"children":[[["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/apple-touch-icon.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon-16x16.png"}],["$","link",null,{"rel":"manifest","href":"/site.webmanifest"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#da532c"}],["$","meta",null,{"name":"theme-color","content":"#ffffff"}]],["$","link",null,{"rel":"stylesheet","href":"/css/prismjs/themes/prism.min.css","data-noprefix":true}],["$","script",null,{"src":"//embed.typeform.com/next/embed.js","defer":true}]]}],["$","body",null,{"className":"text-stone-950 dark:text-stone-50 relative overflow-y-visible flex flex-col sm:flex-row gap-16 bg-stone-100 dark:bg-stone-900 selection:bg-blue-100 dark:selection:bg-stone-700","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4ee60fc4c49b900d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/6fe5b7e9881d8040.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L6"]]]]]
8:I[93936,["151","static/chunks/151-4f4f9e87c8c3b05f.js","617","static/chunks/617-4c75795bce0a0dd1.js","274","static/chunks/app/articles/%5Bslug%5D/layout-89be2ba3f803cf87.js"],"MdxCode"]
9:I[38173,["151","static/chunks/151-4f4f9e87c8c3b05f.js","617","static/chunks/617-4c75795bce0a0dd1.js","274","static/chunks/app/articles/%5Bslug%5D/layout-89be2ba3f803cf87.js"],"Image"]
a:I[231,["151","static/chunks/151-4f4f9e87c8c3b05f.js","617","static/chunks/617-4c75795bce0a0dd1.js","274","static/chunks/app/articles/%5Bslug%5D/layout-89be2ba3f803cf87.js"],""]
c:I[5781,["151","static/chunks/151-4f4f9e87c8c3b05f.js","617","static/chunks/617-4c75795bce0a0dd1.js","274","static/chunks/app/articles/%5Bslug%5D/layout-89be2ba3f803cf87.js"],"Tooltip"]
e:I[42016,["151","static/chunks/151-4f4f9e87c8c3b05f.js","617","static/chunks/617-4c75795bce0a0dd1.js","274","static/chunks/app/articles/%5Bslug%5D/layout-89be2ba3f803cf87.js"],"HeaderHamburger"]
f:I[49780,["151","static/chunks/151-4f4f9e87c8c3b05f.js","617","static/chunks/617-4c75795bce0a0dd1.js","274","static/chunks/app/articles/%5Bslug%5D/layout-89be2ba3f803cf87.js"],"HeaderNavItem"]
11:I[89133,["151","static/chunks/151-4f4f9e87c8c3b05f.js","617","static/chunks/617-4c75795bce0a0dd1.js","274","static/chunks/app/articles/%5Bslug%5D/layout-89be2ba3f803cf87.js"],"ThemeSwitch"]
b:{"marginTop":"2rem","marginBottom":"2rem"}
2:[["$","div",null,{"className":"\n  flex\n  flex-col\n  mb-8\n  gap-3\n","children":[["$","h2",null,{"className":"mt-5 text-2xl font-semibold","children":"Parallel loading in React"}],["$","p",null,{"className":"\n  text-xs\n","children":"17 April 2021"}],["$","p",null,{"className":"\n  text-xs\n","children":[["$","span","software-development",{"className":"\n  mr-3\n  py-0.5\n  px-1\n  border\n  border-1\n  border-stone-400\n  rounded\n","children":"software-development"}]]}]]}],"$L7",["$","div",null,{"className":"mt-4","children":[["$","h2",null,{"className":"absolute -top-0 invisible mt-5 text-2xl font-semibold","id":"top","children":"Intro"}],["$","div",null,{"className":"fragment_fragment__EI5et","children":[["$","p",null,{"children":"Recently I had to build a React component that would merge the results of several independent requests into one set of data and render it as a single list."}],"\n",["$","p",null,{"children":"The requests would look like this:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"GET to load initial list of items"}],"\n",["$","li",null,{"children":"GET to load item 1 details"}],"\n",["$","li",null,{"children":"GET to load item 2 details"}],"\n",["$","li",null,{"children":"... etc for each item in the list"}],"\n"]}],"\n",["$","p",null,{"children":"I wanted the list to ultimately render like this:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Item 1 + details"}],"\n",["$","li",null,{"children":"Item 2 + details"}],"\n",["$","li",null,{"children":"... etc for each item in the list"}],"\n"]}],"\n",["$","p",null,{"children":"The problem was: how to load a list of items, then load details of each item, making a separate request per item, then combine all of this information and render it to the user, all within one component."}],"\n",["$","aside",null,{"className":"p-4 m-4 my-4 rounded rounded-md border border-stone-400 bg-stone-200 dark:bg-stone-800 *:first:pt-0","children":["$","p",null,{"children":["Note: This could be done more easily by splitting details into a separate component, rendered in a ",["$","$L8",null,{"children":"map"}]," loop, and having each instance of that component make its own request. However, for various reasons, this wasn't possible, and I had to do everything in one component."]}]}],"\n",["$","h3",null,{"className":"mt-5 text-3xl font-semibold","id":"synchronously-combining-results","children":["$","a",null,{"className":"_=>[t,_].filter(o.isNotNil).join(\":\") relative hover:text-sky-500 text-xl font-semibold","href":"#synchronously-combining-results","children":["Synchronously combining results",["$","span",null,{"className":"absolute flex top-0 items-center -left-4 bottom-0 text-stone-500 invisible group/:visible pl-4 text-sm","children":"#"}]]}]}],"\n",["$","p",null,{"children":"The simplest way would be to await all the requests and then render them together at once."}],"\n","\n",["$","p",null,{"children":["$","figure",null,{"className":"px-8 py-12","suppressHydrationWarning":true,"children":[["$","a",null,{"href":"/images/articles/parallel-loading-react/sync-loading.svg","target":"_blank","children":["$","$L9",null,{"className":"w-auto p-2 border bg-white border-black dark:border-white dark:invert","alt":"Flowchart depicting synchronous loading of items","src":"/images/articles/parallel-loading-react/sync-loading.svg","width":600,"height":400,"placeholder":"empty"}]}],["$","figcaption",null,{"className":"mt-4 text-xs leading-4","children":["â–² ","Flowchart depicting synchronous loading of items"]}]]}]}],"\n",["$","p",null,{"children":["Here is an implementation which uses ",["$","$L8",null,{"children":"Promise.all"}],"."]}],"\n",["$","p",null,{"children":["$","$La",null,{"className":"inline-block text-sky-600 dark:text-sky-300 font-medium hover:text-sky-500 hover:dark:text-sky-400 hover:underline cursor-pointer","href":"https://codepen.io/jonathanconway/pen/dyRQGam","children":["Codepen Link",false]}]}],"\n",["$","pre",null,{"style":{"marginTop":"2rem","marginBottom":"2rem"},"suppressHydrationWarning":true,"children":["$","$L8",null,{"className":"language-jsx","children":"function UsersAndStatuses(props) {\n  const [users, setUsers] = React.useState([]);\n\n  React.useEffect(async () => {\n    const users = await mockUsers();\n    const userIds = users.map((user) => user.id);\n\n    // Promise.all technique\n    const userStatuses = await Promise.all(userIds.map(mockUserStatus));\n\n    const usersWithStatus = users.map((user, index) => ({\n      ...user,\n      ...userStatuses[index],\n    }));\n\n    setUsers(usersWithStatus);\n  }, []);\n\n  return (\n    <ul>\n      {!users.length && \"Loading...\"}\n      {users.map((user) => (\n        <li>\n          {user.name} {user.status}\n        </li>\n      ))}\n    </ul>\n  );\n}\n"}]}],"\n",["$","p",null,{"children":"The problem with the above is:"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"It could take a long time for all the requests to complete."}]}],"\n",["$","p",null,{"children":"We don't want to keep the user waiting for the whole list to load before they can see any results."}],"\n",["$","p",null,{"children":"It would be better if we could"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Load and quickly render the list of items without the details, then"}],"\n",["$","li",null,{"children":"Load and render the detail for each item as soon as each response is received"}],"\n"]}],"\n","\n",["$","p",null,{"children":["$","figure",null,{"className":"px-8 py-12","suppressHydrationWarning":true,"children":[["$","a",null,{"href":"/images/articles/parallel-loading-react/async-loading.svg","target":"_blank","children":["$","$L9",null,{"className":"w-auto p-2 border bg-white border-black dark:border-white dark:invert","alt":"Flowchart depicting parallel loading of items","src":"/images/articles/parallel-loading-react/async-loading.svg","width":600,"height":400,"placeholder":"empty"}]}],["$","figcaption",null,{"className":"mt-4 text-xs leading-4","children":["â–² ","Flowchart depicting parallel loading of items"]}]]}]}],"\n",["$","h3",null,{"className":"mt-5 text-3xl font-semibold","id":"asynchronously-combining-results","children":["$","a",null,{"className":"_=>[t,_].filter(o.isNotNil).join(\":\") relative hover:text-sky-500 text-xl font-semibold","href":"#asynchronously-combining-results","children":["Asynchronously combining results",["$","span",null,{"className":"absolute flex top-0 items-center -left-4 bottom-0 text-stone-500 invisible group/:visible pl-4 text-sm","children":"#"}]]}]}],"\n",["$","p",null,{"children":"Implementing this improved solution raised a challenge:"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"How to merge the details from all the requests together into one state variable without triggering a React refresh cycle?"}]}],"\n",["$","p",null,{"children":"If the React refresh cycle triggered, it would have caused the state variable to contain incomplete data, as one partial value would override another."}],"\n",["$","p",null,{"children":"It turns out the solution is rather simple: we just have to re-use the latest copy of our state variable each time we set it."}],"\n",["$","p",null,{"children":["So instead of the typical ",["$","$L8",null,{"children":"setState"}]," call:"]}],"\n",["$","pre",null,{"style":"$b","suppressHydrationWarning":true,"children":["$","$L8",null,{"className":"language-js","children":"setUsers({\n  ...users,\n  [updatedUserId]: updatedUser,\n});\n"}]}],"\n",["$","p",null,{"children":["We ",["$","$La",null,{"className":"inline-block text-sky-600 dark:text-sky-300 font-medium hover:text-sky-500 hover:dark:text-sky-400 hover:underline cursor-pointer","href":"https://twitter.com/dan_abramov/status/816394376817635329","children":["pass a state setter",false]}]," whose parameter (",["$","$L8",null,{"children":"currentUsers"}],") will always have the last updated value:"]}],"\n",["$","pre",null,{"style":"$b","suppressHydrationWarning":true,"children":["$","$L8",null,{"className":"language-js","children":"setUsers((currentUsers) => ({\n  ...currentUsers,\n  [updatedUserId]: updatedUser,\n}));\n"}]}],"\n",["$","p",null,{"children":"So... here's the parallel loading solution."}],"\n",["$","p",null,{"children":["$","$La",null,{"className":"inline-block text-sky-600 dark:text-sky-300 font-medium hover:text-sky-500 hover:dark:text-sky-400 hover:underline cursor-pointer","href":"https://codepen.io/jonathanconway/pen/dyRQMQL","children":["Codepen Link",false]}]}],"\n",["$","pre",null,{"style":"$b","suppressHydrationWarning":true,"children":["$","$L8",null,{"className":"language-jsx","children":"function UsersAndStatuses(props) {\n  const [usersById, setUsersById] = React.useState({});\n  const users = React.useMemo(() => Object.values(usersById), [usersById]);\n\n  React.useEffect(async () => {\n    const usersList = await mockUsers();\n\n    setUsersById(\n      usersList.reduce(\n        (acc, user) => ({\n          ...acc,\n          [user.id]: user,\n        }),\n        {}\n      )\n    );\n\n    const userIds = usersList.map((user) => user.id);\n\n    userIds.forEach(async (userId) => {\n      const userStatus = await mockUserStatus(userId);\n\n      // Async state setter technique\n      setUsersById((currentUsersById) => ({\n        ...currentUsersById,\n        [userId]: {\n          ...currentUsersById[userId],\n          ...userStatus,\n        },\n      }));\n    });\n  }, []);\n\n  return (\n    <ul>\n      {!users.length && \"Loading...\"}\n      {users.map((user) => (\n        <li>\n          {user.name} {user.status}\n        </li>\n      ))}\n    </ul>\n  );\n}\n"}]}]]}]]}],null]
d:T1f62,M16.705 0.309999C18.1283 0.309999 19.3767 0.519999 20.45 0.939999C21.5233 1.33667 22.3517 1.89667 22.935 2.62C23.5417 3.32 23.845 4.10167 23.845 4.965C23.845 5.89833 23.5183 6.66833 22.865 7.275C22.235 7.88167 21.3717 8.185 20.275 8.185C19.155 8.185 18.28 7.905 17.65 7.345C17.02 6.76167 16.705 5.98 16.705 5C16.705 4.53333 16.775 4.04333 16.915 3.53C15.935 3.78667 15.06 4.3 14.29 5.07C13.5433 5.81667 13.0417 6.80833 12.785 8.045C12.645 8.745 12.575 9.375 12.575 9.935C12.575 11.195 12.925 12.1517 13.625 12.805C14.325 13.4583 15.3283 13.785 16.635 13.785C17.3817 13.785 18.0233 13.715 18.56 13.575C19.0967 13.4117 19.645 13.2017 20.205 12.945C20.6717 12.7117 21.01 12.595 21.22 12.595C21.36 12.595 21.4533 12.63 21.5 12.7C21.5467 12.7467 21.57 12.8633 21.57 13.05C21.5933 13.9133 21.2317 14.8233 20.485 15.78C19.7617 16.7133 18.7467 17.5067 17.44 18.16C16.1567 18.79 14.71 19.105 13.1 19.105C11.42 19.105 9.92667 18.8017 8.62 18.195C7.33667 17.565 6.33333 16.6783 5.61 15.535C4.91 14.3683 4.56 13.015 4.56 11.475C4.56 10.7517 4.65333 9.94667 4.84 9.06C5.47 6.16667 6.85833 3.985 9.005 2.515C11.175 1.045 13.7417 0.309999 16.705 0.309999ZM36.5147 0.484998C39.6881 0.484998 42.0214 1.12667 43.5147 2.41C45.0314 3.69333 45.7897 5.37333 45.7897 7.45C45.7897 8.15 45.6964 8.93167 45.5097 9.795C45.0664 11.7083 44.2381 13.3883 43.0247 14.835C41.8114 16.2583 40.3181 17.3667 38.5447 18.16C36.7947 18.93 34.8931 19.315 32.8397 19.315C29.5964 19.315 27.1931 18.6733 25.6297 17.39C24.0897 16.0833 23.3197 14.3567 23.3197 12.21C23.3197 11.4867 23.4131 10.6817 23.5997 9.795C24.0431 7.975 24.8831 6.365 26.1197 4.965C27.3797 3.54167 28.9081 2.445 30.7047 1.675C32.5247 0.881665 34.4614 0.484998 36.5147 0.484998ZM36.4097 3.6C35.9197 3.6 35.3947 4.04333 34.8347 4.93C34.2981 5.79333 33.6564 7.43833 32.9097 9.865C32.1631 12.2917 31.7897 13.995 31.7897 14.975C31.7897 15.4883 31.8714 15.8383 32.0347 16.025C32.1981 16.1883 32.4197 16.27 32.6997 16.27C33.1897 16.3167 33.6914 15.8967 34.2047 15.01C34.7414 14.1233 35.4064 12.3967 36.1997 9.83C36.9231 7.56667 37.2847 5.92167 37.2847 4.895C37.2847 4.405 37.2031 4.06667 37.0397 3.88C36.8997 3.69333 36.6897 3.6 36.4097 3.6ZM67.6035 14.17C67.5568 14.2633 67.5335 14.4033 67.5335 14.59C67.5335 14.7533 67.5685 14.8817 67.6385 14.975C67.7318 15.0683 67.8485 15.115 67.9885 15.115C68.2685 15.115 68.5018 14.9983 68.6885 14.765C68.8985 14.5083 69.0385 14.38 69.1085 14.38C69.2251 14.38 69.3185 14.4617 69.3885 14.625C69.4585 14.765 69.4935 14.94 69.4935 15.15C69.5168 15.8267 69.2951 16.4917 68.8285 17.145C68.3618 17.775 67.6735 18.3 66.7635 18.72C65.8768 19.1167 64.8035 19.315 63.5435 19.315C62.0035 19.315 60.7785 18.965 59.8685 18.265C58.9585 17.5417 58.4918 16.585 58.4685 15.395C58.4685 14.5317 58.6785 13.5633 59.0985 12.49L61.0235 7.45C61.1401 7.14667 61.1985 6.90167 61.1985 6.715C61.1985 6.41167 61.0935 6.17833 60.8835 6.015C60.6968 5.82833 60.4635 5.735 60.1835 5.735C59.6701 5.735 59.1801 5.98 58.7135 6.47C58.2468 6.93667 57.9085 7.52 57.6985 8.22L55.5285 15.36C55.4351 15.6167 55.3885 15.8617 55.3885 16.095C55.3885 16.375 55.4468 16.6083 55.5635 16.795C55.6801 16.9583 55.8435 17.1333 56.0535 17.32C56.2168 17.46 56.3335 17.5883 56.4035 17.705C56.4735 17.8217 56.4851 17.9617 56.4385 18.125C56.3451 18.4283 56.1235 18.65 55.7735 18.79C55.4235 18.93 54.8751 19 54.1285 19H46.1485C45.5418 19 45.1101 18.9067 44.8535 18.72C44.5735 18.51 44.4685 18.2417 44.5385 17.915C44.6318 17.635 44.8768 17.39 45.2735 17.18C45.6235 16.9933 45.9151 16.7717 46.1485 16.515C46.3818 16.2583 46.5801 15.85 46.7435 15.29L49.8585 5.175C49.9051 5.05833 49.9285 4.895 49.9285 4.685C49.9285 4.42833 49.8701 4.23 49.7535 4.09C49.6601 3.95 49.4968 3.775 49.2635 3.565C49.0301 3.37833 48.8668 3.215 48.7735 3.075C48.6801 2.935 48.6685 2.74833 48.7385 2.515C48.8785 1.97833 49.6135 1.51167 50.9435 1.115C52.2735 0.694999 53.6618 0.484998 55.1085 0.484998C56.2751 0.484998 57.1968 0.811665 57.8735 1.465C58.5501 2.095 58.8535 2.98167 58.7835 4.125C59.7401 2.74833 60.7551 1.80333 61.8285 1.29C62.9018 0.753332 64.0685 0.484998 65.3285 0.484998C66.7518 0.484998 67.8951 0.916665 68.7585 1.78C69.6451 2.64333 70.0885 3.76333 70.0885 5.14C70.0885 5.86333 69.9718 6.575 69.7385 7.275L67.6035 14.17ZM103.857 5.455C103.857 7.53167 103.134 9.655 101.687 11.825C100.241 13.995 98.4089 15.7917 96.1922 17.215C93.9989 18.615 91.8405 19.315 89.7172 19.315C88.0372 19.315 86.6139 19.0233 85.4472 18.44C84.2805 17.8567 83.5222 17.0167 83.1722 15.92C82.3089 16.97 81.3522 17.7633 80.3022 18.3C79.2522 18.8367 78.1555 19.105 77.0122 19.105C75.4255 19.105 74.1305 18.72 73.1272 17.95C72.1472 17.1567 71.6572 16.0017 71.6572 14.485C71.6572 13.6917 71.7855 12.875 72.0422 12.035L74.0022 5.175C74.0489 4.98833 74.0722 4.84833 74.0722 4.755C74.0722 4.52167 74.0139 4.32333 73.8972 4.16C73.7805 3.99667 73.6172 3.82167 73.4072 3.635C73.0572 3.33167 72.8822 3.06333 72.8822 2.83C72.8589 2.50333 73.0572 2.15333 73.4772 1.78C73.8972 1.40667 74.4805 1.10333 75.2272 0.87C75.9972 0.613332 76.8605 0.484998 77.8172 0.484998C79.3805 0.484998 80.5939 0.869999 81.4572 1.64C82.3439 2.38667 82.7872 3.36667 82.7872 4.58C82.7872 5.11667 82.6939 5.7 82.5072 6.33L80.7222 12.28C80.6289 12.6067 80.5822 12.8283 80.5822 12.945C80.5822 13.2483 80.6639 13.4817 80.8272 13.645C81.0139 13.8083 81.2589 13.89 81.5622 13.89C81.9822 13.89 82.3322 13.75 82.6122 13.47C82.9155 13.1667 83.2072 12.6883 83.4872 12.035L85.4822 5.175C85.5289 4.98833 85.5522 4.84833 85.5522 4.755C85.5522 4.52167 85.4939 4.32333 85.3772 4.16C85.2605 3.99667 85.0972 3.82167 84.8872 3.635C84.5372 3.33167 84.3622 3.06333 84.3622 2.83C84.3389 2.50333 84.5372 2.15333 84.9572 1.78C85.3772 1.40667 85.9605 1.10333 86.7072 0.87C87.4772 0.613332 88.3405 0.484998 89.2972 0.484998C90.8839 0.484998 92.1089 0.858332 92.9722 1.605C93.8355 2.35167 94.2672 3.34333 94.2672 4.58C94.2672 5.07 94.1739 5.65333 93.9872 6.33L91.7122 13.82C91.6655 13.9367 91.6422 14.1117 91.6422 14.345C91.6422 14.6483 91.7472 14.8817 91.9572 15.045C92.1672 15.2083 92.4589 15.29 92.8322 15.29C93.3455 15.29 93.9405 15.0683 94.6172 14.625C95.3172 14.1583 95.9939 13.505 96.6472 12.665C97.3239 11.8017 97.8722 10.7867 98.2922 9.62C97.3589 8.80333 96.6939 7.99833 96.2972 7.205C95.9239 6.41167 95.7372 5.595 95.7372 4.755C95.7372 3.565 96.0639 2.56167 96.7172 1.745C97.3705 0.904999 98.3155 0.484998 99.5522 0.484998C100.789 0.484998 101.816 0.928332 102.632 1.815C103.449 2.70167 103.857 3.915 103.857 5.455ZM121.979 0.484998C123.005 0.484998 123.822 0.904999 124.429 1.745C125.059 2.56167 125.374 3.68167 125.374 5.105C125.374 6.34167 125.152 7.67167 124.709 9.095C123.845 11.965 122.457 14.6717 120.544 17.215C118.654 19.7583 116.472 21.8 113.999 23.34C111.549 24.88 109.099 25.65 106.649 25.65C105.435 25.65 104.385 25.44 103.499 25.02C102.635 24.6 101.982 24.04 101.539 23.34C101.072 22.64 100.839 21.8933 100.839 21.1C100.839 20.75 100.897 20.365 101.014 19.945C101.224 19.2917 101.574 18.79 102.064 18.44C102.554 18.09 103.137 17.915 103.814 17.915C104.887 17.915 105.762 18.2767 106.439 19C107.139 19.7467 107.582 20.7617 107.769 22.045C109.262 21.975 110.639 21.3333 111.899 20.12C110.709 19.91 109.822 19.5133 109.239 18.93C108.679 18.3233 108.294 17.39 108.084 16.13L106.684 7.555C106.614 7.11167 106.509 6.80833 106.369 6.645C106.252 6.45833 106.089 6.365 105.879 6.365C105.715 6.365 105.517 6.44667 105.284 6.61C105.074 6.77333 104.922 6.855 104.829 6.855C104.642 6.855 104.549 6.65667 104.549 6.26C104.549 5.93333 104.607 5.58333 104.724 5.21C105.144 3.88 105.925 2.76 107.069 1.85C108.212 0.916666 109.542 0.449999 111.059 0.449999C112.552 0.449999 113.649 0.893332 114.349 1.78C115.072 2.66667 115.539 4.03167 115.749 5.875L116.799 13.575C116.869 14.1583 117.079 14.45 117.429 14.45C117.849 14.45 118.339 14.0767 118.899 13.33C119.459 12.56 120.007 11.475 120.544 10.075C119.844 9.445 119.307 8.72167 118.934 7.905C118.56 7.08833 118.374 6.21333 118.374 5.28C118.374 4.55667 118.467 3.90333 118.654 3.32C118.934 2.38667 119.365 1.68667 119.949 1.22C120.555 0.729999 121.232 0.484998 121.979 0.484998Z10:["slug","parallel-loading-react","d"]
3:[["$","div",null,{"className":"sm:absolute sm:top-0 w-full *:m-auto *:sm:w-[65rem] px-4 *:sm:px-8","children":["$","div",null,{"className":"flex flex-row pt-8 items-center justify-between","children":[["$","h1",null,{"className":"flex flex-row gap-4 items-center","children":[["$","span",null,{"className":"hidden","children":"conwy.co"}],["$","div",null,{"className":"relative h-6 hover:brightness-110 focus:brightness-110","children":["$","$Lc","undefined",{"contents":"Click to go home","style":{"backgroundColor":"var(--color-sky-300)","color":"black"},"children":["$","$La",null,{"className":"inline-block text-sky-600 dark:text-sky-300 font-medium hover:text-sky-500 hover:dark:text-sky-400 hover:underline cursor-pointer","href":"/","children":[["$","svg",null,{"className":"sm:-ml-1.5 dark:brightness-125 w-32 sm:w-40 pointer-events-none","viewBox":"0 0 130 34","width":"130px","fill":"none","xmlns":"http://www.w3.org/2000/svg","children":[["$","g",null,{"filter":"url(#filter0_d_327_14)","children":["$","path",null,{"d":"$d","fill":"url(#paint0_linear_327_14)"}]}],["$","defs",null,{"children":[["$","filter",null,{"id":"filter0_d_327_14","x":"0.559998","y":"0.310059","width":"128.814","height":"33.3398","filterUnits":"userSpaceOnUse","colorInterpolationFilters":"sRGB","children":[["$","feFlood",null,{"floodOpacity":"0","result":"BackgroundImageFix"}],["$","feColorMatrix",null,{"in":"SourceAlpha","type":"matrix","values":"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0","result":"hardAlpha"}],["$","feOffset",null,{"dy":"4"}],["$","feGaussianBlur",null,{"stdDeviation":"2"}],["$","feComposite",null,{"in2":"hardAlpha","operator":"out"}],["$","feColorMatrix",null,{"type":"matrix","values":"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"}],["$","feBlend",null,{"mode":"normal","in2":"BackgroundImageFix","result":"effect1_dropShadow_327_14"}],["$","feBlend",null,{"mode":"normal","in":"SourceGraphic","in2":"effect1_dropShadow_327_14","result":"shape"}]]}],["$","linearGradient",null,{"id":"paint0_linear_327_14","x1":"101","y1":"7","x2":"101","y2":"45","gradientUnits":"userSpaceOnUse","children":[["$","stop",null,{"stopColor":"#72B9FF"}],["$","stop",null,{"offset":"1","stopColor":"#E644FF"}]]}]]}]]}],false]}]}]}]]}],["$","$Le",null,{"children":["$","div",null,{"className":"relative flex flex-col sm:flex-row sm:gap-6 items-center sm:items-start w-40 sm:w-auto","children":[["$","$Lf","/articles",{"href":"/articles","title":"Articles","selected":true}],["$","$Lf","/projects",{"href":"/projects","title":"Projects","selected":false}],["$","$Lf","/work",{"href":"/work","title":"Work","selected":false}],["$","$Lf","/contact",{"href":"/contact","title":"Contact","selected":false}]]}]}]]}]}],["$","div",null,{"className":"mx-0 sm:ml-auto sm:mt-28 sm:w-[43rem] sm:flex sm:flex-row sm:gap-8 px-4 sm:px-8","children":["$","div",null,{"className":"w-full","children":[["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","articles","children","$10","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],["$","div",null,{"className":"sm:absolute left-0 right-0 mt-4 sm:mt-28 py-4 sm:py-10 sm:px-8 *:m-auto *:sm:w-[60rem]","children":["$","div",null,{"className":"flex flex-row items-center p-4 bg-stone-200 dark:bg-stone-800","children":[["$","div",null,{"className":"flex flex-col flex-1","children":[["$","div",null,{"className":"pt-4 first:pt-0 text-xs flex flex-row gap-2 dark:text-stone-200","children":["$","div",null,{"children":["Â© ",2024," ","Jonathan Conway"]}]}],["$","div",null,{"className":"pt-4 first:pt-0 text-xs flex flex-row gap-2 dark:text-stone-200","children":[["$","a",null,{"className":"underline","href":"https://github.com/jonathanconway/conwy_next","target":"_blank","children":"Source"}],["$","a",null,{"className":"underline","href":"https://wave.webaim.org/report#/https://conwy.co","target":"_blank","children":"WCAG"}]]}]]}],["$","div",null,{"className":"","children":["$","$L11",null,{}]}]]}]}]]}]}],["$","div",null,{"className":"hidden sm:flex sticky top-0 sm:w-72 mt-48 mr-auto pt-10 pr-8","children":"$L12"}]]
6:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"conwy - articles - parallel loading in react"}],["$","meta","3",{"name":"description","content":"Homepage of Jonathan Conway"}],["$","link","4",{"rel":"manifest","href":"/manifest.json","crossOrigin":"use-credentials"}],["$","meta","5",{"name":"next-size-adjust"}]]
1:null
13:I[46668,["151","static/chunks/151-4f4f9e87c8c3b05f.js","617","static/chunks/617-4c75795bce0a0dd1.js","274","static/chunks/app/articles/%5Bslug%5D/layout-89be2ba3f803cf87.js"],"ArticleSidebarHeadings"]
7:null
14:T579,M811.52-35.36c-263.17-.01-526.35-.01-789.52,0-32.21,0-60.2,18.9-71.43,48.82-2.14,5.7-3.17,12.16-3.17,18.28-.15,266.9-.13,533.8-.13,800.69,0,30.23,17.2,55.53,45.61,66.98,4.86,1.96,9.8,3.71,14.7,5.56H825.55c10.35-4.91,21.61-8.52,30.85-15,20.83-14.61,31.31-35.48,31.32-61.1,.06-262.5,.05-525,.06-787.51,0-42.82-33.65-76.71-76.26-76.72ZM306.58,506.45c-.79,36.65-35.76,70.78-73.17,72.19-31.04,1.17-62.16,.25-93.25,.21-.87,0-1.74-.47-3.09-.85V282.12c1.75-.3,3.52-.85,5.3-.86,30.14-.05,60.3-.55,90.43,.12,36.94,.82,73.06,35.65,73.8,72.61,1.03,50.8,1.07,101.66-.03,152.46Zm182.9,72.08c-2.86,.14-5.86,.4-8.87,.4-34.55,.03-69.1,.04-103.64,0-19.44-.02-33.95-13.13-35.82-32.43-.51-5.3-.68-10.64-.68-15.97-.04-68.77,.01-137.54-.07-206.31-.01-12.95,1.52-25.52,12.5-33.89,5.49-4.18,12.61-8.57,19.08-8.7,38.9-.8,77.82-.4,117.41-.4v53.47c-22.23,0-44.13-.08-66.03,.04-9.05,.05-21.91-2.92-26.14,1.74-4.84,5.33-2.29,17.62-2.47,26.9-.25,12.78-.06,25.57-.06,39.77h57.77v53.98h-57.09v67.83h94.12v53.57Zm243.21-247.2c-18.03,67.91-35.68,135.93-54.59,203.6-3.31,11.86-10.43,23.59-18.57,32.97-13.96,16.09-37.39,16.28-51.56,.38-8.27-9.27-15.65-20.96-18.91-32.8-22.82-82.77-44.46-165.86-66.44-248.87-.39-1.46-.25-3.07-.42-5.38,18.47,0,36.65-.21,54.81,.31,1.95,.06,4.81,4.07,5.51,6.71,15.81,59.77,31.36,119.62,46.99,179.44,1.06,4.06,2.3,8.08,5.06,11.86,17.18-66.02,34.35-132.03,51.54-198.07h59.54c-4.4,16.96-8.58,33.43-12.94,49.86Z12:["$","div",null,{"className":"\n  flex\n  flex-col\n  gap-10\n","children":[["$","$L13",null,{"articleHeadings":[{"id":"top","title":"Intro"},{"title":"Synchronously combining results","id":"synchronously-combining-results","shortTitle":"$undefined"},{"title":"Asynchronously combining results","id":"asynchronously-combining-results","shortTitle":"$undefined"}]}],["$","div",null,{"className":"flex flex-1 flex-col gap-2","children":[["$","h3",null,{"className":"uppercase text-stone-500 dark:text-stone-300 text-[0.6rem] sm:text-xs font-medium","children":"Related links"}],["$","div",null,{"className":"flex flex-col gap-1","children":[["$","$La",null,{"className":"inline-block text-sky-600 dark:text-sky-300 font-medium hover:text-sky-500 hover:dark:text-sky-400 hover:underline cursor-pointer inline-flex flex-row items-center gap-1","href":"https://dev.to/conw_y/parallel-loading-in-react-cci","target":"_blank","children":[[["$","div",null,{"id":"$undefined","className":"relative text-inherit","style":{"width":"1rem","height":"1rem"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","aria-hidden":true,"focusable":false,"className":"w-full h-full","icon":"dev","viewBox":"0 0 864 864","children":[["$","defs",null,{"children":["$","clipPath",null,{"id":"clippath","children":["$","rect",null,{"className":"cls-1","width":"864","height":"864"}]}]}],["$","g",null,{"className":"cls-2","children":["$","g",null,{"children":[["$","path",null,{"className":"cls-4","d":"$14"}],["$","path",null,{"className":"cls-4","d":"M190.38,525.05v-189.03c13.36,0,26.62-1.48,39.39,.39,14.83,2.16,23.31,13.98,23.47,30.76,.41,42.02,.5,84.05-.04,126.07-.25,19.16-10.84,29.89-30.15,31.65-10.51,.96-21.18,.17-32.67,.17Z"}]]}]}]]}],["$","span",null,{"className":"absolute left-0 top-0 right-0 bottom-0"}]]}],["$","span",null,{"className":"text-sm","children":"DEV.to article"}]],["$","div",null,{"id":"$undefined","className":"relative text-inherit","style":{"width":"1rem","height":"1rem"},"children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","aria-hidden":true,"focusable":false,"className":"w-full h-full","icon":"open-in-new","viewBox":"0 -960 960 960","children":["$","path",null,{"d":"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h280v80H200v560h560v-280h80v280q0 33-23.5 56.5T760-120H200Zm188-212-56-56 372-372H560v-80h280v280h-80v-144L388-332Z"}]}],["$","span",null,{"className":"absolute left-0 top-0 right-0 bottom-0"}]]}]]}]]}]]}],["$","$L9",null,{"className":"\n  rounded-md\n  w-96\n","src":"/images/articles/parallel-loading-react/main.jpg","alt":"Article main image","priority":true,"unoptimized":true,"width":100,"height":65}]]}]
